local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (0==v29) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\145\103","\59\191\73\224\54"),function(v43)if (v9(v43,2)==79) then v31=v8(v11(v43,1,1));return "";else local v81=0;local v82;while true do if (0==v81) then v82=v10(v8(v43,16));if v31 then local v122=0;local v123;while true do if (v122==0) then v123=v13(v82,v31);v31=nil;v122=1;end if (v122==1) then return v123;end end else return v82;end break;end end end end);v29=1;end if (v29==1) then v32=nil;function v32(v44,v45,v46)if v46 then local v83=0;local v84;while true do if (v83==0) then v84=(v44/(2^(v45-1)))%(2^(((v46-(2 -1)) -(v45-(2 -1))) + 1)) ;return v84-(v84%1) ;end end else local v85=0;local v86;while true do if (0==v85) then v86=2^(v45-1) ;return (((v44%(v86 + v86))>=v86) and 1) or 0 ;end end end end v33=nil;v29=2;end if (v29==3) then v35=nil;function v35()local v47=0;local v48;local v49;local v50;local v51;while true do if (1==v47) then return (v51 * 16777216) + (v50 * 65536) + (v49 * 256) + v48 ;end if (v47==0) then v48,v49,v50,v51=v9(v27,v30,v30 + 3 );v30=v30 + (623 -(555 + 64)) ;v47=1;end end end v36=nil;v29=4;end if (v29==4) then function v36()local v52=0;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v52==3) then if (v57==0) then if (v56==0) then return v58 * 0 ;else v57=1;v55=0;end elseif (v57==(2978 -(857 + 74))) then return ((v56==0) and (v58 * (1/0))) or (v58 * NaN) ;end return v16(v58,v57-1023 ) * (v55 + (v56/(2^52))) ;end if (v52==0) then v53=v35();v54=v35();v52=1;end if (v52==2) then v57=v32(v54,21,31);v58=((v32(v54,32)==1) and  -1) or 1 ;v52=3;end if (v52==1) then v55=1;v56=(v32(v54,1,20) * (2^32)) + v53 ;v52=2;end end end v37=nil;function v37(v59)local v60=0;local v61;local v62;while true do if (v60==0) then v61=nil;if  not v59 then local v115=0;while true do if (v115==0) then v59=v35();if (v59==0) then return "";end break;end end end v60=1;end if (v60==3) then return v14(v62);end if (v60==1) then v61=v11(v27,v30,(v30 + v59) -1 );v30=v30 + v59 ;v60=2;end if (v60==2) then v62={};for v91=1, #v61 do v62[v91]=v10(v9(v11(v61,v91,v91)));end v60=3;end end end v29=5;end if (v29==2) then function v33()local v63=0;local v64;while true do if (v63==1) then return v64;end if (v63==0) then v64=v9(v27,v30,v30);v30=v30 + (1 -0) ;v63=1;end end end v34=nil;function v34()local v65,v66=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;return (v66 * (659 -403)) + v65 ;end v29=3;end if (7==v29) then function v41(v67,v68,v69)local v70=0;local v71;local v72;local v73;while true do if (0==v70) then v71=v67[118 -(32 + 85) ];v72=v67[2];v70=1;end if (v70==1) then v73=v67[3];return function(...)local v93=v71;local v94=v72;local v95=v73;local v96=v39;local v97=1 + 0 ;local v98= -1;local v99={};local v100={...};local v101=v20("#",...) -1 ;local v102={};local v103={};for v116=0 + 0 ,v101 do if (v116>=v95) then v99[v116-v95 ]=v100[v116 + 1 ];else v103[v116]=v100[v116 + 1 ];end end local v104=(v101-v95) + 1 ;local v105;local v106;while true do local v117=0;while true do if (v117==0) then v105=v93[v97];v106=v105[1];v117=1;end if (v117==1) then if (v106<=39) then if (v106<=19) then if (v106<=9) then if (v106<=4) then if (v106<=1) then if (v106==0) then local v144=0;local v145;local v146;local v147;local v148;while true do if (v144==2) then for v338=v145,v98 do v148=v148 + 1 ;v103[v338]=v146[v148];end break;end if (v144==1) then v98=(v147 + v145) -1 ;v148=0;v144=2;end if (v144==0) then v145=v105[2];v146,v147=v96(v103[v145](v103[v145 + (958 -(892 + 65)) ]));v144=1;end end else v103[v105[2]]=v103[v105[3]][v105[4]];end elseif (v106<=2) then local v151=0;local v152;local v153;local v154;local v155;while true do if (v151==0) then v152=v105[2];v153,v154=v96(v103[v152](v21(v103,v152 + 1 ,v105[3])));v151=1;end if (v151==2) then for v341=v152,v98 do local v342=0;while true do if (v342==0) then v155=v155 + 1 ;v103[v341]=v153[v155];break;end end end break;end if (v151==1) then v98=(v154 + v152) -1 ;v155=0;v151=2;end end elseif (v106>3) then if v103[v105[2]] then v97=v97 + 1 ;else v97=v105[3];end else v103[v105[2]][v103[v105[7 -4 ]]]=v105[4];end elseif (v106<=6) then if (v106==5) then local v156=v105[3 -1 ];v103[v156](v21(v103,v156 + 1 ,v98));else local v157=0;local v158;local v159;local v160;local v161;while true do if (v157==0) then v158=v105[3 -1 ];v159,v160=v96(v103[v158](v21(v103,v158 + 1 ,v98)));v157=1;end if (v157==1) then v98=(v160 + v158) -1 ;v161=0;v157=2;end if (v157==2) then for v344=v158,v98 do v161=v161 + 1 ;v103[v344]=v159[v161];end break;end end end elseif (v106<=7) then local v162=0;local v163;while true do if (v162==0) then v163=v105[2];v103[v163](v103[v163 + 1 ]);break;end end elseif (v106==8) then if (v103[v105[2]]==v105[354 -(87 + 263) ]) then v97=v97 + 1 ;else v97=v105[3];end else v103[v105[182 -(67 + 113) ]]=v105[3] + v103[v105[4]] ;end elseif (v106<=14) then if (v106<=11) then if (v106>10) then local v164=0;local v165;local v166;local v167;local v168;while true do if (v164==1) then v98=(v167 + v165) -1 ;v168=0 + 0 ;v164=2;end if (v164==2) then for v348=v165,v98 do local v349=0;while true do if (v349==0) then v168=v168 + 1 ;v103[v348]=v166[v168];break;end end end break;end if (v164==0) then v165=v105[2];v166,v167=v96(v103[v165](v21(v103,v165 + 1 ,v98)));v164=1;end end else v103[v105[2]]();end elseif (v106<=(28 -16)) then local v169=0;local v170;while true do if (0==v169) then v170=v105[2];v103[v170](v21(v103,v170 + 1 + 0 ,v98));break;end end elseif (v106>13) then if ((v105[3]==v7("\216\39\212\255","\169\135\98\154")) or (v105[3]==v7("\204\114\48\82\248\61\222","\168\171\23\68\52\157\83"))) then v103[v105[2]]=v69;else v103[v105[2]]=v69[v105[3]];end else v103[v105[2]]=v41(v94[v105[3]],nil,v69);end elseif (v106<=16) then if (v106>15) then v103[v105[2]][v105[3]]=v103[v105[4]];else v103[v105[7 -5 ]]=v103[v105[3]]%v103[v105[4]] ;end elseif (v106<=17) then local v174=v105[2];v103[v174]=v103[v174](v21(v103,v174 + 1 ,v105[3]));elseif (v106>18) then v103[v105[2]]={};else v97=v105[3];end elseif (v106<=29) then if (v106<=24) then if (v106<=21) then if (v106==20) then local v176=v105[954 -(802 + 150) ];v103[v176]=v103[v176](v21(v103,v176 + 1 ,v98));else local v178=v105[2];local v179=v103[v178];local v180=v103[v178 + 2 ];if (v180>0) then if (v179>v103[v178 + 1 ]) then v97=v105[3];else v103[v178 + 3 ]=v179;end elseif (v179<v103[v178 + 1 ]) then v97=v105[3];else v103[v178 + 3 ]=v179;end end elseif (v106<=22) then local v181=0;local v182;local v183;local v184;while true do if (v181==2) then for v357=1,v105[4] do v97=v97 + 1 ;local v358=v93[v97];if (v358[1 -0 ]==52) then v184[v357-1 ]={v103,v358[3]};else v184[v357-1 ]={v68,v358[3]};end v102[ #v102 + 1 ]=v184;end v103[v105[2]]=v41(v182,v183,v69);break;end if (v181==0) then v182=v94[v105[3]];v183=nil;v181=1;end if (v181==1) then v184={};v183=v18({},{[v7("\203\78\252\163\33\40\159","\231\148\17\149\205\69\77")]=function(v360,v361)local v362=0;local v363;while true do if (v362==0) then v363=v184[v361];return v363[1][v363[5 -3 ]];end end end,[v7("\191\152\201\254\64\246\142\163\194\227","\159\224\199\167\155\55")]=function(v364,v365,v366)local v367=v184[v365];v367[1][v367[2]]=v366;end});v181=2;end end elseif (v106==23) then local v259=0;local v260;while true do if (v259==0) then v260=v105[2];do return v103[v260](v21(v103,v260 + 1 ,v105[3]));end break;end end else v103[v105[2 + 0 ]]=v68[v105[3]];end elseif (v106<=26) then if (v106==25) then v103[v105[2]]();else local v185=v105[999 -(915 + 82) ];local v186=v103[v185];for v248=v185 + 1 ,v98 do v15(v186,v103[v248]);end end elseif (v106<=27) then local v187=0;local v188;while true do if (0==v187) then v188=v105[2];v103[v188]=v103[v188](v103[v188 + 1 ]);break;end end elseif (v106>28) then if  not v103[v105[2]] then v97=v97 + 1 ;else v97=v105[3];end else v103[v105[2]]=v103[v105[3]]%v105[4] ;end elseif (v106<=34) then if (v106<=31) then if (v106==(84 -54)) then if v103[v105[2]] then v97=v97 + 1 ;else v97=v105[3];end else v103[v105[2]][v105[3]]=v103[v105[3 + 1 ]];end elseif (v106<=(41 -9)) then v103[v105[1189 -(1069 + 118) ]]=v103[v105[6 -3 ]];elseif (v106==33) then v97=v105[3];else local v266=v94[v105[3]];local v267;local v268={};v267=v18({},{[v7("\200\204\53\220\243\246\36","\178\151\147\92")]=function(v306,v307)local v308=v268[v307];return v308[1][v308[2]];end,[v7("\179\194\66\55\5\69\116\136\248\84","\26\236\157\44\82\114\44")]=function(v309,v310,v311)local v312=0;local v313;while true do if (v312==0) then v313=v268[v310];v313[1][v313[2]]=v311;break;end end end});for v314=1,v105[4] do local v315=0;local v316;while true do if (1==v315) then if (v316[1 -0 ]==52) then v268[v314-1 ]={v103,v316[3]};else v268[v314-1 ]={v68,v316[3]};end v102[ #v102 + 1 ]=v268;break;end if (v315==0) then v97=v97 + 1 ;v316=v93[v97];v315=1;end end end v103[v105[3 -1 ]]=v41(v266,v267,v69);end elseif (v106<=36) then if (v106==35) then if ((v105[3]==v7("\21\11\251\109","\59\74\78\181")) or (v105[3]==v7("\34\212\78\92\182\43\199","\211\69\177\58\58"))) then v103[v105[2]]=v69;else v103[v105[2]]=v69[v105[3]];end else v103[v105[2]]=v103[v105[3]] + v105[4] ;end elseif (v106<=37) then v103[v105[2]]=v41(v94[v105[3]],nil,v69);elseif (v106>38) then v103[v105[2]]=v103[v105[3]][v105[4 + 0 ]];else for v317=v105[2],v105[3] do v103[v317]=nil;end end elseif (v106<=59) then if (v106<=49) then if (v106<=(835 -(368 + 423))) then if (v106<=41) then if (v106>40) then v103[v105[2]]=v103[v105[9 -6 ]] + v105[4] ;else do return v103[v105[2]]();end end elseif (v106<=42) then local v196=0;local v197;while true do if (v196==0) then v197=v105[2];v103[v197]=v103[v197](v21(v103,v197 + 1 ,v98));break;end end elseif (v106>43) then local v275=0;local v276;while true do if (v275==0) then v276=v105[2];v103[v276]=v103[v276](v103[v276 + 1 ]);break;end end elseif  not v103[v105[2]] then v97=v97 + 1 ;else v97=v105[21 -(10 + 8) ];end elseif (v106<=(176 -130)) then if (v106==45) then v69[v105[3]]=v103[v105[2]];else local v200=0;local v201;local v202;while true do if (0==v200) then v201=v105[2];v202=v103[v105[3]];v200=1;end if (v200==1) then v103[v201 + 1 ]=v202;v103[v201]=v202[v105[4]];break;end end end elseif (v106<=47) then v103[v105[2]]=v68[v105[3]];elseif (v106>48) then v103[v105[2]]= #v103[v105[3]];else v103[v105[2]][v103[v105[3]]]=v103[v105[4]];end elseif (v106<=54) then if (v106<=51) then if (v106>50) then v103[v105[2]]=v105[3];else v103[v105[444 -(416 + 26) ]]=v105[3];end elseif (v106<=52) then v103[v105[2]]=v103[v105[9 -6 ]];elseif (v106>53) then local v280=0;local v281;local v282;local v283;while true do if (v280==1) then v283=v103[v281] + v282 ;v103[v281]=v283;v280=2;end if (v280==0) then v281=v105[2];v282=v103[v281 + 2 ];v280=1;end if (2==v280) then if (v282>0) then if (v283<=v103[v281 + 1 ]) then v97=v105[2 + 1 ];v103[v281 + 3 ]=v283;end elseif (v283>=v103[v281 + 1 ]) then local v413=0;while true do if (v413==0) then v97=v105[3];v103[v281 + 3 ]=v283;break;end end end break;end end else local v284=v105[2];v103[v284]=v103[v284]();end elseif (v106<=56) then if (v106==55) then local v211=v105[2];v103[v211]=v103[v211]();else v69[v105[4 -1 ]]=v103[v105[440 -(145 + 293) ]];end elseif (v106<=57) then local v215=0;local v216;local v217;while true do if (v215==0) then v216=v105[2];v217=v103[v105[3]];v215=1;end if (v215==1) then v103[v216 + 1 ]=v217;v103[v216]=v217[v105[4]];break;end end elseif (v106>58) then do return;end else local v286=0;local v287;while true do if (v286==0) then v287=v105[2];do return v21(v103,v287,v98);end break;end end end elseif (v106<=69) then if (v106<=64) then if (v106<=61) then if (v106>60) then v103[v105[432 -(44 + 386) ]]=v105[1489 -(998 + 488) ] + v103[v105[4]] ;else local v219=0;local v220;local v221;while true do if (1==v219) then for v371=v220 + 1 ,v98 do v15(v221,v103[v371]);end break;end if (v219==0) then v220=v105[2];v221=v103[v220];v219=1;end end end elseif (v106<=62) then v103[v105[2]]= #v103[v105[3]];elseif (v106==63) then v103[v105[2]]=v103[v105[3]]%v103[v105[4]] ;else v103[v105[2]]=v103[v105[3]]%v105[4] ;end elseif (v106<=66) then if (v106==65) then local v223=0;local v224;local v225;local v226;local v227;while true do if (0==v223) then v224=v105[2];v225,v226=v96(v103[v224](v103[v224 + 1 ]));v223=1;end if (v223==1) then v98=(v226 + v224) -1 ;v227=0;v223=2;end if (v223==2) then for v372=v224,v98 do local v373=0;while true do if (v373==0) then v227=v227 + 1 ;v103[v372]=v225[v227];break;end end end break;end end else local v228=v105[2];local v229=v103[v228 + 2 ];local v230=v103[v228] + v229 ;v103[v228]=v230;if (v229>0) then if (v230<=v103[v228 + 1 ]) then v97=v105[3];v103[v228 + 3 ]=v230;end elseif (v230>=v103[v228 + 1 ]) then local v376=0;while true do if (v376==0) then v97=v105[1 + 2 ];v103[v228 + 3 ]=v230;break;end end end end elseif (v106<=67) then for v249=v105[2],v105[3] do v103[v249]=nil;end elseif (v106==68) then do return v103[v105[2]]();end else local v290=0;local v291;while true do if (v290==0) then v291=v105[2 + 0 ];v103[v291]=v103[v291](v21(v103,v291 + 1 ,v105[3]));break;end end end elseif (v106<=74) then if (v106<=71) then if (v106==(842 -(201 + 571))) then local v232=v105[2];do return v103[v232](v21(v103,v232 + 1 ,v105[3]));end else v103[v105[2]][v103[v105[1141 -(116 + 1022) ]]]=v105[4];end elseif (v106<=72) then local v235=0;local v236;while true do if (v235==0) then v236=v105[2];v103[v236](v103[v236 + 1 ]);break;end end elseif (v106==73) then if (v103[v105[2]]==v105[4]) then v97=v97 + (4 -3) ;else v97=v105[3];end else local v292=0;local v293;while true do if (v292==0) then v293=v105[2];do return v21(v103,v293,v98);end break;end end end elseif (v106<=(45 + 31)) then if (v106==75) then local v237=0;local v238;local v239;local v240;while true do if (v237==1) then v240=v103[v238 + 2 ];if (v240>0) then if (v239>v103[v238 + 1 ]) then v97=v105[3];else v103[v238 + (10 -7) ]=v239;end elseif (v239<v103[v238 + 1 ]) then v97=v105[3];else v103[v238 + 3 ]=v239;end break;end if (v237==0) then v238=v105[2];v239=v103[v238];v237=1;end end else v103[v105[2]]={};end elseif (v106<=77) then local v242=v105[2];local v243,v244=v96(v103[v242](v21(v103,v242 + (3 -2) ,v105[3])));v98=(v244 + v242) -1 ;local v245=0;for v251=v242,v98 do local v252=0;while true do if (v252==0) then v245=v245 + (860 -(814 + 45)) ;v103[v251]=v243[v245];break;end end end elseif (v106==(192 -114)) then do return;end else v103[v105[2]][v103[v105[3]]]=v103[v105[4]];end v97=v97 + 1 ;break;end end end end;end end end return v41(v40(),{},v28)(...);end if (v29==5) then v38=v35;v39=nil;function v39(...)return {...},v20("#",...);end v29=6;end if (v29==6) then v40=nil;function v40()local v74=0;local v75;local v76;local v77;local v78;local v79;local v80;while true do if (v74==1) then v78={v75,v76,nil,v77};v79=v35();v80={};v74=2;end if (v74==0) then v75={};v76={};v77={};v74=1;end if (v74==3) then for v107=1,v35() do v76[v107-(4 -3) ]=v40();end return v78;end if (2==v74) then for v109=1,v79 do local v110=0;local v111;local v112;while true do if (v110==1) then if (v111==1) then v112=v33()~=(0 + 0) ;elseif (v111==(1 + 1)) then v112=v36();elseif (v111==3) then v112=v37();end v80[v109]=v112;break;end if (v110==0) then v111=v33();v112=nil;v110=1;end end end v78[3]=v33();for v113=878 -(282 + 595) ,v35() do local v114=v33();if (v32(v114,1638 -(1523 + 114) ,1 + 0 )==0) then local v118=0;local v119;local v120;local v121;while true do if (v118==0) then v119=v32(v114,2 -0 ,3);v120=v32(v114,1069 -(68 + 997) ,6);v118=1;end if (v118==2) then if (v32(v120,1,1)==1) then v121[2]=v80[v121[2]];end if (v32(v120,2,2)==1) then v121[3]=v80[v121[3]];end v118=3;end if (v118==1) then v121={v34(),v34(),nil,nil};if (v119==0) then local v136=0;while true do if (0==v136) then v121[3]=v34();v121[4]=v34();break;end end elseif (v119==1) then v121[3]=v35();elseif (v119==2) then v121[3]=v35() -(2^16) ;elseif (v119==3) then local v143=0;while true do if (v143==0) then v121[3]=v35() -((1272 -(226 + 1044))^16) ;v121[4]=v34();break;end end end v118=2;end if (v118==3) then if (v32(v120,3,3)==1) then v121[4]=v80[v121[4]];end v75[v113]=v121;break;end end end end v74=3;end end end v41=nil;v29=7;end end end vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_SKID CAI MMB   (SKID CAI MMB) ~  SKID CAI MMB 

]]--

